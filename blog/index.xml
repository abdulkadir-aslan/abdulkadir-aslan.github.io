<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Abdulkadir</title>
    <link>https://abdulkadir-aslan.github.io/blog/</link>
    <description>Recent content in Blog on Abdulkadir</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Thu, 13 Sep 2018 22:31:21 +0800</lastBuildDate><atom:link href="https://abdulkadir-aslan.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python İle Reaktif Ceza Hesaplama Uygulaması Yaptım</title>
      <link>https://abdulkadir-aslan.github.io/blog/2021-12/python-ile-reaktif-ceza-hesaplama-uygulamas%C4%B1-yapt%C4%B1m/</link>
      <pubDate>Fri, 10 Dec 2021 20:14:59 +0800</pubDate>
      
      <guid>https://abdulkadir-aslan.github.io/blog/2021-12/python-ile-reaktif-ceza-hesaplama-uygulamas%C4%B1-yapt%C4%B1m/</guid>
      <description>Reaktif Ceza Nedir Nasıl Oluşuyor ? Motorların, buzdolaplarının ve flüoresan lamba balastlarının işlevlerini yerine getirebilmesi için sargılarında manyetik alan oluşması gereklidir. Bunun için gerekli olan enerjiye reaktif enerji denilmektedir. Elektrik dağıtım şirketleri, reaktif enerjinin, tüketilen aktif enerjinin belli bir oran dahilinde kalmasını şart koşmaktadırlar. Özel trafolu işletmelerde sıklıkla karşı karşıya kalınan bu sorun, normal işletme koşullarına göre tasarımı yapılmış elektrik panolarındaki kondansatörler vasıtasıyla giderilmektedir. Anormal işletme koşullarında ise trafonun manyetik alanı için gereken reaktif enerji, trafodan çekilen çok küçük miktardaki aktif enerji oranı ve/veya büyük kapasiteli kondansatörlerin varlığın nedeniyle işletmeyi reaktif ceza faturasıyla karşı karşıya getirmektedir.
Görünür , Aktif Ve Reaktif Güç Arasındaki Bağlantı  Aktif güç elektrikte iş yapan güçtür. P ile gösterilen aktif güç şebekeden çekilen akım ile gerilim arasındaki açının (φ) cosinüsü ile akım ve gerilimin çarpılması ile bulunur . (P=V.I.cosφ). Sistem üç fazlı ise çekilen güç de √3 ile çarpılır (P=√3.V.I.cosφ). Aktif gücün birimi Watt’tır(W). Reaktif güç ise manyetik alanla çalışan motor, trafo gibi elektrik makinelerinin çektiği güçtür ve manyetik alanın oluşması için kullanılır. Reaktif güç; şebekeden çekilen akım ve gerilimin arasındaki açının (φ) sinüsü ile akım ve gerilimin çarpımı ile ifade edilir ve Q ile gösterilir Q=P.tanφ. Reaktif gücün birimi Var dır. Görünür güç şebekeden çekilen görünür güç olarak bilinir S ile gösterilir ve tek fazlı sistemlerde S=V.</description>
    </item>
    
    <item>
      <title>Python İle Kendi Hesap Makinamı Yaptım</title>
      <link>https://abdulkadir-aslan.github.io/blog/2021-07/python-ile-kendi-hesap-makinam%C4%B1-yapt%C4%B1m/</link>
      <pubDate>Sat, 10 Jul 2021 20:14:59 +0800</pubDate>
      
      <guid>https://abdulkadir-aslan.github.io/blog/2021-07/python-ile-kendi-hesap-makinam%C4%B1-yapt%C4%B1m/</guid>
      <description>4 İşlem yapabilen basit bir hesap makinası yapmaya çalıştım. Öncelikle program 2 kısımdan oluşuyor
 Kısım Gui yani arayüz (Burayı anlatmayacağım kullanıcının kendi isteğine göre tasarım sağlayacağı için sadece indirme linkini vereceğim) Kısım ise kodlama kısmı girilen değerlerin nerede nasıl işlem gördüğünü anlatacağım.  1. Kısım Yaptığım arayüz tasarımını indirmek için buraya
2. Kısım Bu kısımda girilen değerlerin işlem görme evrelerinin kodlama ksımını anlatacağım. Haydi baslayalım ;
import sys from PyQt5.QtCore import QSize from PyQt5.QtGui import QColor from PyQt5.QtWidgets import QMainWindow,QApplication,QGraphicsDropShadowEffect,QSizeGrip # Arayüz dahil etme from calculate import * class MainWindow(QMainWindow): def __init__(self): QMainWindow.__init__(self) self.ui = Ui_MainWindow() self.ui.setupUi(self) self.show() if __name__ == &amp;#34;__main__&amp;#34;: app = QApplication(sys.argv) window = MainWindow() sys.exit(app.exec_()) Yukarıda yazılan kodu bir python dosyasına kopyalıp aynı dizine indirdiğiniz arayüz dosyasını (calculate.py) ekleyip programı çalıştırdığımızda 1. kısımdaki (Arayüz) fotoğraf karşımıza çıkar. Arayüz üzerinde ne kadar işlem yapmaya çalışsak ta hiç bir değişiklik olmadığını fark edeceksiniz . Çünkü arayüzde bulunan butonlara yapacağı işlemleri atamadık.
import sys from PyQt5.QtCore import QSize from PyQt5.QtGui import QColor from PyQt5.QtWidgets import QMainWindow,QApplication,QGraphicsDropShadowEffect,QSizeGrip # Arayüz dahil etme from calculate import * class MainWindow(QMainWindow): def __init__(self): QMainWindow.__init__(self) self.ui = Ui_MainWindow() self.ui.setupUi(self) self.text = &amp;#34;&amp;#34; ## CLİCKED BUTTON ==&amp;gt; Arayüzdeki butonlara basılması durumları self.ui.pushButton.clicked.connect(self.Button) self.ui.pushButton_2.clicked.connect(self.Button) self.ui.pushButton_3.clicked.connect(self.Button) self.ui.pushButton_4.clicked.connect(self.Button) self.</description>
    </item>
    
  </channel>
</rss>
