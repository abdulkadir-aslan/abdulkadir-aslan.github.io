<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Abdulkadir</title>
    <link>https://abdulkadir-aslan.github.io/</link>
    <description>Recent content on Abdulkadir</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Fri, 10 Dec 2021 20:14:59 +0800</lastBuildDate><atom:link href="https://abdulkadir-aslan.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python İle Reaktif Ceza Hesaplama Uygulaması Yaptım</title>
      <link>https://abdulkadir-aslan.github.io/blog/2021-12/python-ile-reaktif-ceza-hesaplama-uygulamas%C4%B1-yapt%C4%B1m/</link>
      <pubDate>Fri, 10 Dec 2021 20:14:59 +0800</pubDate>
      
      <guid>https://abdulkadir-aslan.github.io/blog/2021-12/python-ile-reaktif-ceza-hesaplama-uygulamas%C4%B1-yapt%C4%B1m/</guid>
      <description>Reaktif Ceza Nedir Nasıl Oluşuyor ? Motorların, buzdolaplarının ve flüoresan lamba balastlarının işlevlerini yerine getirebilmesi için sargılarında manyetik alan oluşması gereklidir. Bunun için gerekli olan enerjiye reaktif enerji denilmektedir. Elektrik dağıtım şirketleri, reaktif enerjinin, tüketilen aktif enerjinin belli bir oran dahilinde kalmasını şart koşmaktadırlar. Özel trafolu işletmelerde sıklıkla karşı karşıya kalınan bu sorun, normal işletme koşullarına göre tasarımı yapılmış elektrik panolarındaki kondansatörler vasıtasıyla giderilmektedir. Anormal işletme koşullarında ise trafonun manyetik alanı için gereken reaktif enerji, trafodan çekilen çok küçük miktardaki aktif enerji oranı ve/veya büyük kapasiteli kondansatörlerin varlığın nedeniyle işletmeyi reaktif ceza faturasıyla karşı karşıya getirmektedir.
Görünür , Aktif Ve Reaktif Güç Arasındaki Bağlantı  Aktif güç elektrikte iş yapan güçtür. P ile gösterilen aktif güç şebekeden çekilen akım ile gerilim arasındaki açının (φ) cosinüsü ile akım ve gerilimin çarpılması ile bulunur . (P=V.I.cosφ). Sistem üç fazlı ise çekilen güç de √3 ile çarpılır (P=√3.V.I.cosφ). Aktif gücün birimi Watt’tır(W). Reaktif güç ise manyetik alanla çalışan motor, trafo gibi elektrik makinelerinin çektiği güçtür ve manyetik alanın oluşması için kullanılır. Reaktif güç; şebekeden çekilen akım ve gerilimin arasındaki açının (φ) sinüsü ile akım ve gerilimin çarpımı ile ifade edilir ve Q ile gösterilir Q=P.tanφ. Reaktif gücün birimi Var dır. Görünür güç şebekeden çekilen görünür güç olarak bilinir S ile gösterilir ve tek fazlı sistemlerde S=V.</description>
    </item>
    
    <item>
      <title>BİLEĞE TAKILAN IOT TABANLI HASTA TAKİP SİSTEMİ</title>
      <link>https://abdulkadir-aslan.github.io/experience/projeler/hasta_takip_sistemi/</link>
      <pubDate>Sat, 10 Jul 2021 20:14:59 +0800</pubDate>
      
      <guid>https://abdulkadir-aslan.github.io/experience/projeler/hasta_takip_sistemi/</guid>
      <description>Sağlığa olan ihtiyaç kişiden kişiye ve toplumdan topluma değiştiği gibi zamanın ilerlemesiyle de değişmekte ve artmaktadır. Bilginin teknolojik gelişmelere paralel olarak hızla yayılması sağlık hizmetlerini geliştirmekle birlikte bireyler tarafından sağlık hizmetlerinde beklentiyi de önemli ölçüde arttırmıştır. Bu nedenle kaliteli sağlık bakımı ve bakım kalitesinin ölçülmesi günümüz sağlık bakımında büyük öneme sahiptir. Hastaların gün içerisinde ihtiyaç ve sağlık durumları ile ilgili belirli aralıklarla kontrol edilmesi gerekmektedir. Bu kontrollerin sıklaşması aile fertlerini maddi manevi yönden olumsuz etkilemektedir. Bu durumdaki hastalar genelde yatalak olduğundan hastane ile ev arası ulaşım zahmetli olur. Hasta ile ilgilenen ferd’in eğer çalıştığı bir işi varsa sürekli ordan izin alması iş yerine sorun teşkil eder. Bu gibi vakaları en aza indirmek ve hasta ile ilgilenen kişinin verimli zaman geçirmesi için hazırlanan projemiz,hasta fonksiyonlarını IOT cihazlar ile Doktora ulaştırmayı amaçlıyor. Proje ile birlikte hastanın hayati vücut değerleri Doktor için önceden analiz edilmiş olacaktır. Küçük elektronik geliştirme kartları ve giyilebilir teknoloji modülleri yardımı ile çalışan ürün, harici bir cihaza ihtiyaç duymadan topladığı verileri bulut sistemine ve ordan hastanın Doktoruna gönderebiliyor. Ayrıca proje tamamen hastanın rahatlığı düşünülerek geliştirilecek olup hastanın bileğine takılarak onu rahatsız etmeyecek şekilde tasarlanacaktır. Projede amacımız insan sağlığı ve konforu olduğu için görünüş ve konfor bakımından en ideal olanları kullanılacaktır.</description>
    </item>
    
    <item>
      <title>Python İle Kendi Hesap Makinamı Yaptım</title>
      <link>https://abdulkadir-aslan.github.io/blog/2021-07/python-ile-kendi-hesap-makinam%C4%B1-yapt%C4%B1m/</link>
      <pubDate>Sat, 10 Jul 2021 20:14:59 +0800</pubDate>
      
      <guid>https://abdulkadir-aslan.github.io/blog/2021-07/python-ile-kendi-hesap-makinam%C4%B1-yapt%C4%B1m/</guid>
      <description>4 İşlem yapabilen basit bir hesap makinası yapmaya çalıştım. Öncelikle program 2 kısımdan oluşuyor
 Kısım Gui yani arayüz (Burayı anlatmayacağım kullanıcının kendi isteğine göre tasarım sağlayacağı için sadece indirme linkini vereceğim) Kısım ise kodlama kısmı girilen değerlerin nerede nasıl işlem gördüğünü anlatacağım.  1. Kısım Yaptığım arayüz tasarımını indirmek için buraya
2. Kısım Bu kısımda girilen değerlerin işlem görme evrelerinin kodlama ksımını anlatacağım. Haydi baslayalım ;
import sys from PyQt5.QtCore import QSize from PyQt5.QtGui import QColor from PyQt5.QtWidgets import QMainWindow,QApplication,QGraphicsDropShadowEffect,QSizeGrip # Arayüz dahil etme from calculate import * class MainWindow(QMainWindow): def __init__(self): QMainWindow.__init__(self) self.ui = Ui_MainWindow() self.ui.setupUi(self) self.show() if __name__ == &amp;#34;__main__&amp;#34;: app = QApplication(sys.argv) window = MainWindow() sys.exit(app.exec_()) Yukarıda yazılan kodu bir python dosyasına kopyalıp aynı dizine indirdiğiniz arayüz dosyasını (calculate.py) ekleyip programı çalıştırdığımızda 1. kısımdaki (Arayüz) fotoğraf karşımıza çıkar. Arayüz üzerinde ne kadar işlem yapmaya çalışsak ta hiç bir değişiklik olmadığını fark edeceksiniz . Çünkü arayüzde bulunan butonlara yapacağı işlemleri atamadık.
import sys from PyQt5.QtCore import QSize from PyQt5.QtGui import QColor from PyQt5.QtWidgets import QMainWindow,QApplication,QGraphicsDropShadowEffect,QSizeGrip # Arayüz dahil etme from calculate import * class MainWindow(QMainWindow): def __init__(self): QMainWindow.__init__(self) self.ui = Ui_MainWindow() self.ui.setupUi(self) self.text = &amp;#34;&amp;#34; ## CLİCKED BUTTON ==&amp;gt; Arayüzdeki butonlara basılması durumları self.ui.pushButton.clicked.connect(self.Button) self.ui.pushButton_2.clicked.connect(self.Button) self.ui.pushButton_3.clicked.connect(self.Button) self.ui.pushButton_4.clicked.connect(self.Button) self.</description>
    </item>
    
    <item>
      <title>Bahçe Sulama Otomasyonu</title>
      <link>https://abdulkadir-aslan.github.io/experience/projeler/bsotomasyonu/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://abdulkadir-aslan.github.io/experience/projeler/bsotomasyonu/</guid>
      <description>Günümüzde kablosuz ağlarda ki teknolojik gelişmeler birçok alanda olduğu gibi tarımsal alanda da etkisini göstermiştir. Tarımda, artan talep ihtiyacını karşılamak amacıyla üretimi sağlıklı bir biçimde yapmak ve kolaylaştırmak için kablosuz ağlardan yararlanma yoluna gidilmiştir. Bu projede tarımda önemli bir nokta haline gelmiş olan sulama faaliyetleri, teknolojiyle desteklenerek akıllı bir sistem tasarlanmıştır. Bu çalışmamızda, bahçeye yerleştirilmiş toprak nem sensörü üzerinden alınan veriler Ardunio UNO denetleyicisi ile işlenir, işlenen bu verilere göre sulamaya ihtiyaç duyulduğu anda su motoru otomatik olarak çalışmakta ve topraktaki bitki ihtiyacı olan suyu karşılamaktadır. Toprak gerekli su ihtiyacını karşıladığında ise su motoru otomatik olarak kapanmaktadır. Ardunio UNO ile buluetooth kontrolüyle seçtiğimiz bitkiyi sulayabiliriz. Bu proje ile su kaynaklarının optimum kullanılması, güç tasarrufunun maximum sağlanması, doğru zamanda doğru miktarda sulamayla aşırı ve gereksiz sulama problemlerinin ortadan kaldırılması amaçlanmıştır.
Bağlantı Şeması Buluetooth Apk  Buradan indirebilirsiniz
 Ardunio Kodu #include&amp;lt;SoftwareSerial.h&amp;gt;SoftwareSerial myserial(6,7); int sensor = A0; int motor = 13; int veri; void setup() { pinMode(sensor,INPUT); pinMode(motor,OUTPUT); Serial.begin(9600); myserial.begin(9600); } void loop() { veri=analogRead(sensor); Serial.println(veri); if(myserial.available()) { char data=myserial.read(); Serial.println(data); if ( data == &amp;#39;1&amp;#39; &amp;amp;&amp;amp; veri&amp;gt;600 ) { digitalWrite(motor,HIGH); delay(4000); digitalWrite(motor,LOW); }else{ digitalWrite(motor,LOW); } if ( data == &amp;#39;2&amp;#39; &amp;amp;&amp;amp; veri&amp;gt;600 ) { digitalWrite(motor,HIGH); delay(9000); digitalWrite(motor,LOW); } else{ digitalWrite(motor,LOW); } if (data == &amp;#39;3&amp;#39; &amp;amp;&amp;amp; veri&amp;gt;600) { digitalWrite(motor,HIGH); delay(7000); digitalWrite(motor,LOW); }else{ digitalWrite(motor,LOW); } if (data == &amp;#39;4&amp;#39; &amp;amp;&amp;amp; veri&amp;gt;600 ) { digitalWrite(motor,HIGH); delay(2000); digitalWrite(motor,LOW); } else{ digitalWrite(motor,LOW); } } } </description>
    </item>
    
  </channel>
</rss>
